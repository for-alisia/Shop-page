/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@font-face {
  font-family: 'OpenSansRegular';
  src: url(fonts/OpenSansRegular.eot);
  src: url(fonts/OpenSansRegular.eot) format("embedded-opentype"), url(fonts/OpenSansRegular.woff2) format("woff2"), url(fonts/OpenSansRegular.woff) format("woff"), url(fonts/OpenSansRegular.ttf) format("truetype"), url(fonts/OpenSansRegular.svg#OpenSansRegular) format("svg"); }

@font-face {
  font-family: 'OpenSansSemibold';
  src: url(fonts/OpenSansSemibold.eot);
  src: url(fonts/OpenSansSemibold.eot) format("embedded-opentype"), url(fonts/OpenSansSemibold.woff2) format("woff2"), url(fonts/OpenSansSemibold.woff) format("woff"), url(fonts/OpenSansSemibold.ttf) format("truetype"), url(fonts/OpenSansSemibold.svg#OpenSansSemibold) format("svg"); }

@font-face {
  font-family: 'OpenSansBold';
  src: url(fonts/OpenSansBold.eot);
  src: url(fonts/OpenSansBold.eot) format("embedded-opentype"), url(fonts/OpenSansBold.woff2) format("woff2"), url(fonts/OpenSansBold.woff) format("woff"), url(fonts/OpenSans-Bold.ttf) format("truetype"), url(fonts/OpenSansBold.svg#OpenSansBold) format("svg"); }

@font-face {
  font-family: 'OpenSansBolditalic';
  src: url(fonts/OpenSansBoldItalic.eot);
  src: url(fonts/OpenSansBoldItalic.eot) format("embedded-opentype"), url(fonts/OpenSansBoldItalic.woff2) format("woff2"), url(fonts/OpenSansBoldItalic.woff) format("woff"), url(fonts/OpenSansBoldItalic.ttf) format("truetype"), url(fonts/OpenSansBoldItalic.svg#OpenSansBoldItalic) format("svg"); }

@font-face {
  font-family: 'OpenSansExtrabold';
  src: url(fonts/OpenSansExtraBold.eot);
  src: url(fonts/OpenSansExtraBold.eot) format("embedded-opentype"), url(fonts/OpenSansExtraBold.woff2) format("woff2"), url(fonts/OpenSansExtraBold.woff) format("woff"), url(fonts/OpenSansExtraBold.ttf) format("truetype"), url(fonts/OpenSansExtraBold.svg#OpenSansExtraBold) format("svg"); }

@font-face {
  font-family: 'OpenSansExtrabolditalic';
  src: url(fonts/OpenSansExtraBoldItalic.eot);
  src: url(fonts/OpenSansExtraBoldItalic.eot) format("embedded-opentype"), url(fonts/OpenSansExtraBoldItalic.woff2) format("woff2"), url(fonts/OpenSansExtraBoldItalic.woff) format("woff"), url(fonts/OpenSansExtraBoldItalic.ttf) format("truetype"), url(fonts/OpenSansExtraBoldItalic.svg#OpenSansExtraBoldItalic) format("svg"); }

@font-face {
  font-family: 'OpenSansItalic';
  src: url(fonts/OpenSansItalic.eot);
  src: url(fonts/OpenSansItalic.eot) format("embedded-opentype"), url(fonts/OpenSansItalic.woff2) format("woff2"), url(fonts/OpenSansItalic.woff) format("woff"), url(fonts/OpenSansItalic.ttf) format("truetype"), url(fonts/OpenSansItalic.svg#OpenSansItalic) format("svg"); }

@font-face {
  font-family: 'OpenSansLight';
  src: url(fonts/OpenSansLight.eot);
  src: url(fonts/OpenSansLight.eot) format("embedded-opentype"), url(fonts/OpenSansLight.woff2) format("woff2"), url(fonts/OpenSansLight.woff) format("woff"), url(fonts/OpenSansLight.ttf) format("truetype"), url(fonts/OpenSansLight.svg#OpenSansLight) format("svg"); }

@font-face {
  font-family: 'OpenSansLightitalic';
  src: url(fonts/OpenSansLightItalic.eot);
  src: url(fonts/OpenSansLightItalic.eot) format("embedded-opentype"), url(fonts/OpenSansLightItalic.woff2) format("woff2"), url(fonts/OpenSansLightItalic.woff) format("woff"), url(fonts/OpenSansLightItalic.ttf) format("truetype"), url(fonts/OpenSansLightItalic.svg#OpenSansLightItalic) format("svg"); }

@font-face {
  font-family: 'OpenSansSemibolditalic';
  src: url(fonts/OpenSansSemiboldItalic.eot);
  src: url(fonts/OpenSansSemiboldItalic.eot) format("embedded-opentype"), url(fonts/OpenSansSemiboldItalic.woff2) format("woff2"), url(fonts/OpenSansSemiboldItalic.woff) format("woff"), url(fonts/OpenSansSemiboldItalic.ttf) format("truetype"), url(fonts/OpenSansSemiboldItalic.svg#OpenSansSemiboldItalic) format("svg"); }

html {
  padding: 0;
  margin: 0;
  height: 100%; }

ul {
  list-style-type: none;
  margin: 0;
  padding: 0; }

* {
  box-sizing: border-box; }

a {
  text-decoration: none; }

body {
  background-color: #ebedef;
  color: #333333;
  font-family: 'OpenSansRegular';
  font-size: 16px;
  padding: 0;
  margin: 0;
  height: 100%; }

.wrapper {
  min-height: 100%;
  margin-bottom: -220px; }
  .wrapper:after {
    content: '';
    display: block;
    height: 220px; }

.footer {
  height: 220px;
  background-image: url("../images/footer-bg.jpg"); }

:focus::-webkit-input-placeholder {
  color: transparent;
  -webkit-transition: all 0.2s ease;
  transition: all 0.2s ease; }

:focus::-moz-placeholder {
  color: transparent;
  -webkit-transition: all 0.2s ease;
  transition: all 0.2s ease; }

:focus:-moz-placeholder {
  color: transparent;
  -webkit-transition: all 0.2s ease;
  transition: all 0.2s ease; }

:focus:-ms-input-placeholder {
  color: transparent;
  -webkit-transition: all 0.2s ease;
  transition: all 0.2s ease; }

::-webkit-input-placeholder {
  color: #7f7f7f;
  font-family: 'OpenSansLight';
  font-size: 14px; }

::-moz-placeholder {
  color: #7f7f7f;
  font-family: 'OpenSansLight';
  font-size: 14px; }

:-moz-placeholder {
  color: #7f7f7f;
  font-family: 'OpenSansLight';
  font-size: 14px; }

:-ms-input-placeholder {
  color: #7f7f7f;
  font-family: 'OpenSansLight';
  font-size: 14px; }
